// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieDemo.DB.Context;

namespace MovieDemo.DB.Migrations
{
    [DbContext(typeof(MovieDemoContext))]
    [Migration("20211013155727_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieDemo.DB.Entities.Movie", b =>
                {
                    b.Property<long>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RunningTime")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfRelease")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1L,
                            Genres = "Short,Talk -Show",
                            RunningTime = 120,
                            Title = "Creative Lite",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 2L,
                            Genres = "Comedy,Talk-Show",
                            RunningTime = 120,
                            Title = "A Little Late with Lilly Singh",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 3L,
                            Genres = "Documentary,Sport",
                            RunningTime = 120,
                            Title = "The Queen's Gambit",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 4L,
                            Genres = "Action,Adventure,Crime",
                            RunningTime = 120,
                            Title = "Followers",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 5L,
                            Genres = "Comedy,Drama,Romance",
                            RunningTime = 120,
                            Title = "The Substitute",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 6L,
                            Genres = "Biography,Documentary,Drama",
                            RunningTime = 120,
                            Title = "Harry's Heroes: The Full English",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 7L,
                            Genres = "Comedy,Drama,Romance",
                            RunningTime = 120,
                            Title = "Stolen Away",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 8L,
                            Genres = "Crime,Drama,Music",
                            RunningTime = 120,
                            Title = "Home for Christmas",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 9L,
                            Genres = "Animation,Comedy,Fantasy",
                            RunningTime = 120,
                            Title = "The Gift",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 10L,
                            Genres = "Drama",
                            RunningTime = 120,
                            Title = "Feel Good",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 11L,
                            Genres = "Drama",
                            RunningTime = 120,
                            Title = "Lost Treasures of Egypt",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 12L,
                            Genres = "Animation,Comedy,Fantasy",
                            RunningTime = 120,
                            Title = "Stu, My Name is Stu",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 13L,
                            Genres = "Drama",
                            RunningTime = 120,
                            Title = "Thirumanam",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 14L,
                            Genres = "Animation,Comedy,Fantasy",
                            RunningTime = 120,
                            Title = "Washington",
                            YearOfRelease = 2019
                        },
                        new
                        {
                            MovieId = 15L,
                            Genres = "Drama",
                            RunningTime = 120,
                            Title = "Lazor Wulf",
                            YearOfRelease = 2019
                        });
                });

            modelBuilder.Entity("MovieDemo.DB.Entities.MovieRating", b =>
                {
                    b.Property<long>("MovieId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("AvgRating")
                        .HasColumnType("decimal(3,1)");

                    b.Property<long?>("NumVotes")
                        .HasColumnType("bigint");

                    b.HasKey("MovieId");

                    b.ToTable("MovieRatings");

                    b.HasData(
                        new
                        {
                            MovieId = 1L,
                            AvgRating = 0.5m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 2L,
                            AvgRating = 1m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 3L,
                            AvgRating = 1m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 4L,
                            AvgRating = 1.5m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 5L,
                            AvgRating = 1.5m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 6L,
                            AvgRating = 2m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 7L,
                            AvgRating = 2m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 8L,
                            AvgRating = 2.5m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 9L,
                            AvgRating = 2.5m,
                            NumVotes = 1L
                        },
                        new
                        {
                            MovieId = 10L,
                            AvgRating = 3m,
                            NumVotes = 1L
                        });
                });

            modelBuilder.Entity("MovieDemo.DB.Entities.MovieUserRating", b =>
                {
                    b.Property<long>("MovieId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("AvgRating")
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("MovieId", "UserId");

                    b.ToTable("MovieUserRatings");

                    b.HasData(
                        new
                        {
                            MovieId = 1L,
                            UserId = 1L,
                            AvgRating = 0.5m
                        },
                        new
                        {
                            MovieId = 2L,
                            UserId = 2L,
                            AvgRating = 1m
                        },
                        new
                        {
                            MovieId = 3L,
                            UserId = 3L,
                            AvgRating = 1m
                        },
                        new
                        {
                            MovieId = 4L,
                            UserId = 4L,
                            AvgRating = 1.5m
                        },
                        new
                        {
                            MovieId = 5L,
                            UserId = 5L,
                            AvgRating = 1.5m
                        },
                        new
                        {
                            MovieId = 6L,
                            UserId = 6L,
                            AvgRating = 2m
                        },
                        new
                        {
                            MovieId = 7L,
                            UserId = 7L,
                            AvgRating = 2m
                        },
                        new
                        {
                            MovieId = 8L,
                            UserId = 8L,
                            AvgRating = 2.5m
                        },
                        new
                        {
                            MovieId = 9L,
                            UserId = 9L,
                            AvgRating = 2.5m
                        },
                        new
                        {
                            MovieId = 10L,
                            UserId = 10L,
                            AvgRating = 3m
                        });
                });

            modelBuilder.Entity("MovieDemo.DB.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            Name = "UserName1"
                        },
                        new
                        {
                            UserId = 2L,
                            Name = "UserName2"
                        },
                        new
                        {
                            UserId = 3L,
                            Name = "UserName3"
                        },
                        new
                        {
                            UserId = 4L,
                            Name = "UserName4"
                        },
                        new
                        {
                            UserId = 5L,
                            Name = "UserName5"
                        },
                        new
                        {
                            UserId = 6L,
                            Name = "UserName6"
                        },
                        new
                        {
                            UserId = 7L,
                            Name = "UserName7"
                        },
                        new
                        {
                            UserId = 8L,
                            Name = "UserName8"
                        },
                        new
                        {
                            UserId = 9L,
                            Name = "UserName9"
                        },
                        new
                        {
                            UserId = 10L,
                            Name = "UserName10"
                        },
                        new
                        {
                            UserId = 11L,
                            Name = "UserName11"
                        },
                        new
                        {
                            UserId = 12L,
                            Name = "UserName12"
                        },
                        new
                        {
                            UserId = 13L,
                            Name = "UserName13"
                        },
                        new
                        {
                            UserId = 14L,
                            Name = "UserName14"
                        },
                        new
                        {
                            UserId = 15L,
                            Name = "UserName15"
                        },
                        new
                        {
                            UserId = 16L,
                            Name = "UserName16"
                        },
                        new
                        {
                            UserId = 17L,
                            Name = "UserName17"
                        },
                        new
                        {
                            UserId = 18L,
                            Name = "UserName18"
                        },
                        new
                        {
                            UserId = 19L,
                            Name = "UserName19"
                        },
                        new
                        {
                            UserId = 20L,
                            Name = "UserName20"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
